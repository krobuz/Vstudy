// truongHq.controller.js
const TruongHq = require("./truongHq.model");
const ThanhPhoHq = require("./thanhphoHq.model");

// üìå L·∫•y t·∫•t c·∫£ tr∆∞·ªùng h·ªçc H√†n Qu·ªëc v√† th√¥ng tin th√†nh ph·ªë H√†n Qu·ªëc
exports.getAllTruongHq = async (req, res) => {
  try {
    const schools = await TruongHq.findAll()
    
    res.json(schools);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// üìå T·∫°o tr∆∞·ªùng h·ªçc m·ªõi v·ªõi th√¥ng tin th√†nh ph·ªë
exports.createTruongHq = async (req, res) => {
  try {
    const { ten_truong_hq, korean_name, id_thanhpho, xep_hang } = req.body;
    console.log(req.body);
    // Ki·ªÉm tra xem th√†nh ph·ªë c√≥ t·ªìn t·∫°i kh√¥ng
    const city = await ThanhPhoHq.findByPk(id_thanhpho);
    if (!city) return res.status(404).json({ message: "Th√†nh ph·ªë kh√¥ng t·ªìn t·∫°i" });

    // T·∫°o tr∆∞·ªùng h·ªçc m·ªõi
    const newSchool = await TruongHq.create({ 
      ten_truong_hq, 
      korean_name, 
      id_thanhpho, 
      xep_hang 
    });

    // Tr·∫£ v·ªÅ tr∆∞·ªùng h·ªçc m·ªõi k√®m th√¥ng tin th√†nh ph·ªë
    const schoolWithCity = await newSchool.reload({ 
      include: { model: ThanhPhoHq, as: "city" } // ‚úÖ Th√™m alias 'city' v√†o include
    });
    res.status(201).json(schoolWithCity);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};
//üìå C·∫≠p nh·∫≠t tr∆∞·ªùng h·ªçc 
exports.updateTruongHq = async (req, res) => {
  try {
    const { id } = req.params; // L·∫•y ID t·ª´ URL
    const { ten_truong_hq, korean_name, id_thanhpho, xep_hang } = req.body;

    // Ki·ªÉm tra xem tr∆∞·ªùng c√≥ t·ªìn t·∫°i kh√¥ng
    const school = await TruongHq.findByPk(id);
    if (!school) return res.status(404).json({ message: "Tr∆∞·ªùng h·ªçc kh√¥ng t·ªìn t·∫°i" });

    // Ki·ªÉm tra xem th√†nh ph·ªë c√≥ t·ªìn t·∫°i kh√¥ng
    if (id_thanhpho) {
      const city = await ThanhPhoHq.findByPk(id_thanhpho);
      if (!city) return res.status(404).json({ message: "Th√†nh ph·ªë kh√¥ng t·ªìn t·∫°i" });
    }

    // C·∫≠p nh·∫≠t th√¥ng tin tr∆∞·ªùng h·ªçc
    await school.update({ ten_truong_hq, korean_name, id_thanhpho, xep_hang });

    // L·∫•y d·ªØ li·ªáu m·ªõi sau khi c·∫≠p nh·∫≠t
    const updatedSchool = await school.reload({
      include: { model: ThanhPhoHq, as: "city" }
    });

    res.json(updatedSchool);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

//üìå Xo√° tr∆∞·ªùng h·ªçc
exports.deleteTruongHq = async (req, res) => {
  try {
    const { id } = req.params;

    // Ki·ªÉm tra xem tr∆∞·ªùng c√≥ t·ªìn t·∫°i kh√¥ng
    const school = await TruongHq.findByPk(id);
    if (!school) return res.status(404).json({ message: "Tr∆∞·ªùng h·ªçc kh√¥ng t·ªìn t·∫°i" });

    // Xo√° tr∆∞·ªùng h·ªçc
    await school.destroy();

    res.json({ message: "Tr∆∞·ªùng h·ªçc ƒë√£ b·ªã xo√° th√†nh c√¥ng" });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};


