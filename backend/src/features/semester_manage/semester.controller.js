const Semester = require("./semester.model");

// üìå L·∫•y danh s√°ch h·ªçc k·ª≥
exports.getAllSemesters = async (req, res) => {
  try {
    const semesters = await Semester.findAll();
    res.json(semesters);
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi l·∫•y danh s√°ch h·ªçc k·ª≥" });
  }
};

// üìå L·∫•y h·ªçc k·ª≥ theo ID
exports.getSemesterById = async (req, res) => {
  try {
    const { id } = req.params;
    const semester = await Semester.findByPk(id);
    
    if (!semester) {
      return res.status(404).json({ error: "H·ªçc k·ª≥ kh√¥ng t·ªìn t·∫°i" });
    }

    res.json(semester);
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi l·∫•y h·ªçc k·ª≥ theo ID" });
  }
};

// üìå Th√™m m·ªõi h·ªçc k·ª≥
exports.createSemester = async (req, res) => {
  try {
    const { ten_kyhoc, ngaybd, ngaykt } = req.body;
    if (!ten_kyhoc || !ngaybd || !ngaykt) {
      return res.status(400).json({ error: "Thi·∫øu th√¥ng tin h·ªçc k·ª≥" });
    }

    const newSemester = await Semester.create({ ten_kyhoc, ngaybd, ngaykt });
    res.status(201).json(newSemester);
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi t·∫°o h·ªçc k·ª≥" });
  }
};

// üìå C·∫≠p nh·∫≠t h·ªçc k·ª≥
exports.updateSemester = async (req, res) => {
  try {
    const { id } = req.params;
    const { ten_kyhoc, ngaybd, ngaykt } = req.body;

    const semester = await Semester.findByPk(id);
    if (!semester) {
      return res.status(404).json({ error: "H·ªçc k·ª≥ kh√¥ng t·ªìn t·∫°i" });
    }

    semester.ten_kyhoc = ten_kyhoc;
    semester.ngaybd = ngaybd;
    semester.ngaykt = ngaykt;
    await semester.save();

    res.json(semester);
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi c·∫≠p nh·∫≠t h·ªçc k·ª≥" });
  }
};

// üìå X√≥a h·ªçc k·ª≥
exports.deleteSemester = async (req, res) => {
  try {
    const { id } = req.params;

    const semester = await Semester.findByPk(id);
    if (!semester) {
      return res.status(404).json({ error: "H·ªçc k·ª≥ kh√¥ng t·ªìn t·∫°i" });
    }

    await semester.destroy();
    res.json({ message: "X√≥a h·ªçc k·ª≥ th√†nh c√¥ng!" });
  } catch (error) {
    res.status(500).json({ error: "L·ªói khi x√≥a h·ªçc k·ª≥" });
  }
};
